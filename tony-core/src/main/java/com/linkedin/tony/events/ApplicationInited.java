/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.tony.events;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ApplicationInited extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7031823521817385670L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ApplicationInited\",\"namespace\":\"com.linkedin.tony.events\",\"fields\":[{\"name\":\"applicationId\",\"type\":\"string\"},{\"name\":\"numTasks\",\"type\":\"int\"},{\"name\":\"host\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ApplicationInited> ENCODER =
      new BinaryMessageEncoder<ApplicationInited>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ApplicationInited> DECODER =
      new BinaryMessageDecoder<ApplicationInited>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ApplicationInited> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ApplicationInited> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ApplicationInited>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ApplicationInited to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ApplicationInited from a ByteBuffer. */
  public static ApplicationInited fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence applicationId;
  @Deprecated public int numTasks;
  @Deprecated public java.lang.CharSequence host;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ApplicationInited() {}

  /**
   * All-args constructor.
   * @param applicationId The new value for applicationId
   * @param numTasks The new value for numTasks
   * @param host The new value for host
   */
  public ApplicationInited(java.lang.CharSequence applicationId, java.lang.Integer numTasks, java.lang.CharSequence host) {
    this.applicationId = applicationId;
    this.numTasks = numTasks;
    this.host = host;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return applicationId;
    case 1: return numTasks;
    case 2: return host;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: applicationId = (java.lang.CharSequence)value$; break;
    case 1: numTasks = (java.lang.Integer)value$; break;
    case 2: host = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'applicationId' field.
   * @return The value of the 'applicationId' field.
   */
  public java.lang.CharSequence getApplicationId() {
    return applicationId;
  }

  /**
   * Sets the value of the 'applicationId' field.
   * @param value the value to set.
   */
  public void setApplicationId(java.lang.CharSequence value) {
    this.applicationId = value;
  }

  /**
   * Gets the value of the 'numTasks' field.
   * @return The value of the 'numTasks' field.
   */
  public java.lang.Integer getNumTasks() {
    return numTasks;
  }

  /**
   * Sets the value of the 'numTasks' field.
   * @param value the value to set.
   */
  public void setNumTasks(java.lang.Integer value) {
    this.numTasks = value;
  }

  /**
   * Gets the value of the 'host' field.
   * @return The value of the 'host' field.
   */
  public java.lang.CharSequence getHost() {
    return host;
  }

  /**
   * Sets the value of the 'host' field.
   * @param value the value to set.
   */
  public void setHost(java.lang.CharSequence value) {
    this.host = value;
  }

  /**
   * Creates a new ApplicationInited RecordBuilder.
   * @return A new ApplicationInited RecordBuilder
   */
  public static com.linkedin.tony.events.ApplicationInited.Builder newBuilder() {
    return new com.linkedin.tony.events.ApplicationInited.Builder();
  }

  /**
   * Creates a new ApplicationInited RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ApplicationInited RecordBuilder
   */
  public static com.linkedin.tony.events.ApplicationInited.Builder newBuilder(com.linkedin.tony.events.ApplicationInited.Builder other) {
    return new com.linkedin.tony.events.ApplicationInited.Builder(other);
  }

  /**
   * Creates a new ApplicationInited RecordBuilder by copying an existing ApplicationInited instance.
   * @param other The existing instance to copy.
   * @return A new ApplicationInited RecordBuilder
   */
  public static com.linkedin.tony.events.ApplicationInited.Builder newBuilder(com.linkedin.tony.events.ApplicationInited other) {
    return new com.linkedin.tony.events.ApplicationInited.Builder(other);
  }

  /**
   * RecordBuilder for ApplicationInited instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ApplicationInited>
    implements org.apache.avro.data.RecordBuilder<ApplicationInited> {

    private java.lang.CharSequence applicationId;
    private int numTasks;
    private java.lang.CharSequence host;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.linkedin.tony.events.ApplicationInited.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.applicationId)) {
        this.applicationId = data().deepCopy(fields()[0].schema(), other.applicationId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numTasks)) {
        this.numTasks = data().deepCopy(fields()[1].schema(), other.numTasks);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.host)) {
        this.host = data().deepCopy(fields()[2].schema(), other.host);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ApplicationInited instance
     * @param other The existing instance to copy.
     */
    private Builder(com.linkedin.tony.events.ApplicationInited other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.applicationId)) {
        this.applicationId = data().deepCopy(fields()[0].schema(), other.applicationId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numTasks)) {
        this.numTasks = data().deepCopy(fields()[1].schema(), other.numTasks);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.host)) {
        this.host = data().deepCopy(fields()[2].schema(), other.host);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'applicationId' field.
      * @return The value.
      */
    public java.lang.CharSequence getApplicationId() {
      return applicationId;
    }

    /**
      * Sets the value of the 'applicationId' field.
      * @param value The value of 'applicationId'.
      * @return This builder.
      */
    public com.linkedin.tony.events.ApplicationInited.Builder setApplicationId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.applicationId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'applicationId' field has been set.
      * @return True if the 'applicationId' field has been set, false otherwise.
      */
    public boolean hasApplicationId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'applicationId' field.
      * @return This builder.
      */
    public com.linkedin.tony.events.ApplicationInited.Builder clearApplicationId() {
      applicationId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'numTasks' field.
      * @return The value.
      */
    public java.lang.Integer getNumTasks() {
      return numTasks;
    }

    /**
      * Sets the value of the 'numTasks' field.
      * @param value The value of 'numTasks'.
      * @return This builder.
      */
    public com.linkedin.tony.events.ApplicationInited.Builder setNumTasks(int value) {
      validate(fields()[1], value);
      this.numTasks = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'numTasks' field has been set.
      * @return True if the 'numTasks' field has been set, false otherwise.
      */
    public boolean hasNumTasks() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'numTasks' field.
      * @return This builder.
      */
    public com.linkedin.tony.events.ApplicationInited.Builder clearNumTasks() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'host' field.
      * @return The value.
      */
    public java.lang.CharSequence getHost() {
      return host;
    }

    /**
      * Sets the value of the 'host' field.
      * @param value The value of 'host'.
      * @return This builder.
      */
    public com.linkedin.tony.events.ApplicationInited.Builder setHost(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.host = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'host' field has been set.
      * @return True if the 'host' field has been set, false otherwise.
      */
    public boolean hasHost() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'host' field.
      * @return This builder.
      */
    public com.linkedin.tony.events.ApplicationInited.Builder clearHost() {
      host = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ApplicationInited build() {
      try {
        ApplicationInited record = new ApplicationInited();
        record.applicationId = fieldSetFlags()[0] ? this.applicationId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.numTasks = fieldSetFlags()[1] ? this.numTasks : (java.lang.Integer) defaultValue(fields()[1]);
        record.host = fieldSetFlags()[2] ? this.host : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ApplicationInited>
    WRITER$ = (org.apache.avro.io.DatumWriter<ApplicationInited>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ApplicationInited>
    READER$ = (org.apache.avro.io.DatumReader<ApplicationInited>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
